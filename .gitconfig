[user]
    name  = Kamil Dzieli≈Ñski
    email = brego.dk+d428c@gmail.com

[core]
    excludesfile   = ~/.gitignore
    attributesfile = ~/.gitattributes
    hooksPath      = .githooks
    ignoreCase     = false
    pager          = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    max-line-length = 700
    syntax-theme    = Solarized (dark)
    navigate        = true  # use n and N to move between diff sections
    light           = false # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
    hyperlinks      = true
    line-numbers    = true
#    file-style                    = bold yellow ul
#    file-decoration-style         = yellow ol ul
#    hunk-header-decoration-style  = blue
#    hunk-header-line-number-style = purple bold

[alias]
    a               = add
    aa              = add .
    ap              = add -p
    b               = branch
    bc              = branch-cleanup
    c               = commit
    cm              = commit -m
    co              = checkout
    cb              = checkout -b
    d               = diff --color --color-words --abbrev
    ds              = diff --color --color-words --abbrev --staged
    f               = fetch
    # h               = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    h               = log --color --graph --pretty=format:'%Cred%h%Creset %Cgreen[%ad]%Creset -%C(yellow)%d%Creset %s %C(bold blue)<%an>%Creset' --abbrev-commit --date=short
    l               = log --name-status
    log             = log --topo-order
    m               = merge
    r               = rebase
    s               = status -s
    up              = pull
    fuckit          = reset --hard HEAD
    unstage         = reset HEAD
    undo-commit     = reset --soft HEAD^
    undo-push       = push -f origin HEAD^:master
    branch-cleanup  = "!git branch --no-color | grep -v '\\*' | grep -vE 'master|production|staging|release' | xargs -n 1 git branch -D"
    branch-refresh  = "remote update origin --prune"

    peek = !git stash && git checkout
    back = !git checkout - && git stash pop

    stashall = !git add . && git stash

# Alias below is built by Kim Rose based on the following:
# http://stackoverflow.com/a/4969679/954798
#
# It copies branch-1 contents to branch-2 without merging, whilie keeping the
# branch-2 history.
    merge-theirs = !git merge --no-edit -s ours "$1" && git branch branchTEMP && git reset --hard "$1" && git reset --soft branchTEMP && git commit --amend && git branch -D branchTEMP && git diff HEAD "$1"

# Use this to rename files when changing case only (usefull on Mac).
#
# Thanks to https://stackoverflow.com/a/20907647/954798
    rename = mv -f

[commit]
    template = ~/.gitmessage

[help]
    autocorrect = 1

[pull]
    default = current
    ff      = only
    rebase  = true

# push easily. http://stackoverflow.com/a/23918418/89484
[push]
    default         = current
    followTags      = true
    autoSetupRemote = true

[rerere]
    enabled = true

[color]
    ui = auto

[color "branch"]
    current = yellow reverse
    local   = yellow
    remote  = green

[color "diff"]
    meta                = yellow bold
    frag                = magenta bold
    old                 = red bold
    new                 = green bold
    whitespace          = red reverse
    newMoved            = cyan dim
    oldMoved            = blue dim
    newMovedAlternative = cyan italic
    oldMovedAlternative = blue italic

[color "status"]
    added     = yellow
    changed   = green
    untracked = cyan

[merge]
    log           = true
    conflictstyle = diff3

[diff]
    colorMoved = default

[url "git@github.com:"]
    insteadOf     = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
    insteadOf = "github:"

[url "git@gist.github.com:"]
    insteadOf     = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
    insteadOf = "gist:"

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
